<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="100MHZ" xml:space="preserve">
    <value>100 MHz multiplier Control</value>
  </data>
  <data name="1GB_PAGE" xml:space="preserve">
    <value>1GB pages supported</value>
  </data>
  <data name="3DNOW" xml:space="preserve">
    <value>3DNow!™ instructions</value>
  </data>
  <data name="3DNOWEXT" xml:space="preserve">
    <value>AMD extensions to 3DNow! instructions</value>
  </data>
  <data name="ABM" xml:space="preserve">
    <value>LZCNT (count leading zero bits) instruction</value>
  </data>
  <data name="ABMC" xml:space="preserve">
    <value>Assignable Bandwidth Monitoring Counters</value>
  </data>
  <data name="ACPI" xml:space="preserve">
    <value>Thermal Monitoring and Software Controlled Clock Facilities</value>
  </data>
  <data name="ADMSK" xml:space="preserve">
    <value>Address mask extension support for instruction breakpoint</value>
  </data>
  <data name="ADX" xml:space="preserve">
    <value>Multi-Precision Add-Carry Instruction Extensions</value>
  </data>
  <data name="AESNI" xml:space="preserve">
    <value>AES 128bit instruction Extensions</value>
  </data>
  <data name="AHF64" xml:space="preserve">
    <value>LAHF and SAHF instructions available when IA-32e mode is enabled and in 64-bit submode</value>
  </data>
  <data name="ALTERNATEINJECTION" xml:space="preserve">
    <value>Alternate Injection supported</value>
  </data>
  <data name="AM" xml:space="preserve">
    <value>LOCK MOV CR0 means MOV CR8</value>
  </data>
  <data name="AMX_BF16" xml:space="preserve">
    <value>Tile computation on bfloat16 numbers</value>
  </data>
  <data name="AMX_INT8" xml:space="preserve">
    <value>Tile computation on 8-bit integers</value>
  </data>
  <data name="AMX_TILE" xml:space="preserve">
    <value>Tile architecture</value>
  </data>
  <data name="APIC" xml:space="preserve">
    <value>On-chip Advanced Programmable Interrupt Controller hardware</value>
  </data>
  <data name="ASRFPEP" xml:space="preserve">
    <value>FP Error Pointers Restored by XRSTOR</value>
  </data>
  <data name="AUTOMATICIBRS" xml:space="preserve">
    <value>Automatic IBRS</value>
  </data>
  <data name="AVIC" xml:space="preserve">
    <value>AMD advanced virtual interrupt controller</value>
  </data>
  <data name="AVX" xml:space="preserve">
    <value>Advanced Vector Extensions</value>
  </data>
  <data name="AVX2" xml:space="preserve">
    <value>Advanced Vector Extensions 2</value>
  </data>
  <data name="AVX512BW" xml:space="preserve">
    <value>AVX512 byte and word instructions</value>
  </data>
  <data name="AVX512CD" xml:space="preserve">
    <value>AVX512 conflict detection, broadcast mask instructions</value>
  </data>
  <data name="AVX512DQ" xml:space="preserve">
    <value>AVX512 double/quadword instructions</value>
  </data>
  <data name="AVX512ER" xml:space="preserve">
    <value>AVX512 approximate exponential and reciprocal instructions</value>
  </data>
  <data name="AVX512F" xml:space="preserve">
    <value>AVX512 foundation instructions</value>
  </data>
  <data name="AVX512PF" xml:space="preserve">
    <value>AVX512 prefetch instructions</value>
  </data>
  <data name="AVX512VL" xml:space="preserve">
    <value>AVX512 vector length instructions</value>
  </data>
  <data name="AVX512_4FMAPS" xml:space="preserve">
    <value>AVX512 packed single precision fused multiply add instructions</value>
  </data>
  <data name="AVX512_4VNNIW" xml:space="preserve">
    <value>AVX512 4-register neural network instructions</value>
  </data>
  <data name="AVX512_BF16" xml:space="preserve">
    <value>AVX512 bfloat16 instructions</value>
  </data>
  <data name="AVX512_BITALG" xml:space="preserve">
    <value>AVX512 bit counting instructions</value>
  </data>
  <data name="AVX512_FP16" xml:space="preserve">
    <value>AVX512 float16 instructions</value>
  </data>
  <data name="AVX512_IFMA" xml:space="preserve">
    <value>AVX512 Integer Fuse Multiply Add instructions</value>
  </data>
  <data name="AVX512_VBMI" xml:space="preserve">
    <value>AVX512 bit manipulation instructions (VPERMB, VPERMI2B, VPERMT2B, VPMULTISHIFTQB)</value>
  </data>
  <data name="AVX512_VBMI2" xml:space="preserve">
    <value>AVX512 bit manipulation instructions (VPCOMPRESSB, VCOMPRESSW, VPEXPANDB, VPEXPANDW, VPSHLD, VPSHLDV, VPSHRD, VPSHRDV)</value>
  </data>
  <data name="AVX512_VNNI" xml:space="preserve">
    <value>AVX512 neural network instructions (VPDPBUSD, VPDPBUSDS, VPDPWSSD, VPDPWSSDS)</value>
  </data>
  <data name="AVX512_VP2INTERSECT" xml:space="preserve">
    <value>AVX512 VP2INTERSECT double/quad word instructions</value>
  </data>
  <data name="AVX512_VPOPCNTDQ" xml:space="preserve">
    <value>AVX512 population count double/quad word instructions</value>
  </data>
  <data name="AVX_VNNI" xml:space="preserve">
    <value>AVX Vector Neural Network Instructions</value>
  </data>
  <data name="BHI_CTRL" xml:space="preserve">
    <value>IA32_SPEC_CTRL MSR allows enable of BHI_DIS_S behaviour</value>
  </data>
  <data name="BMEC" xml:space="preserve">
    <value>Bandwidth Monitoring Event Configuration</value>
  </data>
  <data name="BMI1" xml:space="preserve">
    <value>Bit manipulation instructions (ANDN, BEXTR, BLSI, BLSR, TZCNT)</value>
  </data>
  <data name="BMI2" xml:space="preserve">
    <value>Bit manipulation instructions (BZHI, MULX, PDEP, PEXT, RORX, SARX/SHLX/SHRX</value>
  </data>
  <data name="BRNTRGT" xml:space="preserve">
    <value>Branch target address reporting supported</value>
  </data>
  <data name="BTC_NO" xml:space="preserve">
    <value>The processor is not affected by branch type confusion.</value>
  </data>
  <data name="BUSLOCKTHRESHOLD" xml:space="preserve">
    <value>Bus Lock Threshold</value>
  </data>
  <data name="BUS_LOCK_DETECT" xml:space="preserve">
    <value>Support for OS bus-lock detection</value>
  </data>
  <data name="CET_IBT" xml:space="preserve">
    <value>CET indirect branch tracking</value>
  </data>
  <data name="CET_S" xml:space="preserve">
    <value>CET supervisor enabled for XSS MSR</value>
  </data>
  <data name="CET_SS" xml:space="preserve">
    <value>Control flow enforcement (CET) shadow stack features</value>
  </data>
  <data name="CET_SSS" xml:space="preserve">
    <value>Control flow enforcement (CET) supervisor shadow stack features</value>
  </data>
  <data name="CET_U" xml:space="preserve">
    <value>CET user state enabled for XSS MSR</value>
  </data>
  <data name="CLDEMOTE" xml:space="preserve">
    <value>Cache line demote</value>
  </data>
  <data name="CLFLUSHOPT" xml:space="preserve">
    <value>CLFLUSHOPT (flush cache line optimized) instruction, support persistent memory programming</value>
  </data>
  <data name="CLFSH" xml:space="preserve">
    <value>CLFLUSH (flush cache line) instruction</value>
  </data>
  <data name="CLWB" xml:space="preserve">
    <value>CLWB (Cache line write back) instruction, support persistent memory programming</value>
  </data>
  <data name="CLZERO" xml:space="preserve">
    <value>CLZERO instruction supported</value>
  </data>
  <data name="CMOV" xml:space="preserve">
    <value>Conditional Move Instruction</value>
  </data>
  <data name="CMP" xml:space="preserve">
    <value>Core Multi-processing Legacy Mode</value>
  </data>
  <data name="CMPXCHG16B" xml:space="preserve">
    <value>CMPXCHG16B (compare/exchange atomically 128-bit) instruction</value>
  </data>
  <data name="CNXT-ID" xml:space="preserve">
    <value>L1 Context ID</value>
  </data>
  <data name="CPB" xml:space="preserve">
    <value>Core Performance Boost</value>
  </data>
  <data name="CPPC" xml:space="preserve">
    <value>Collaborative Processor Performance Control</value>
  </data>
  <data name="CPUIDUSERDIS" xml:space="preserve">
    <value>CPUID disable for non-privileged software</value>
  </data>
  <data name="CX8" xml:space="preserve">
    <value>CMPXCHG8 instruction</value>
  </data>
  <data name="DBE" xml:space="preserve">
    <value>Data access breakpoint extension</value>
  </data>
  <data name="DCA" xml:space="preserve">
    <value>Direct Cache Access for DMA writes</value>
  </data>
  <data name="DDPD_U" xml:space="preserve">
    <value>IA32_SPEC_CTRL MSR allows disable of Data Dependent Prefetcher</value>
  </data>
  <data name="DE" xml:space="preserve">
    <value>Debugging Extensions</value>
  </data>
  <data name="DEBUGSWAP" xml:space="preserve">
    <value>Full debug state swap supported for SEV-ES guests</value>
  </data>
  <data name="DECODEASSISTS" xml:space="preserve">
    <value>Decode assists</value>
  </data>
  <data name="DS" xml:space="preserve">
    <value>Debug Store, trace of executed jumps</value>
  </data>
  <data name="DS-CPL" xml:space="preserve">
    <value>CPL Qualified Debug Store</value>
  </data>
  <data name="DTES64" xml:space="preserve">
    <value>64-Bit Debug Store. The processor has the ability to write a history of the 64-bit branch to and from addresses into a memory buffer</value>
  </data>
  <data name="EFER.LMSLE" xml:space="preserve">
    <value>EFER.LMSLE (Extended Feature Enable Register, Long Mode Segment Limit Enable) is unsupported</value>
  </data>
  <data name="EFFFREQRO" xml:space="preserve">
    <value>Read-only effective frequency interface. Presence of MSRC000_00E7 [Read-Only Max Performance Frequency Clock Count (MPerfReadOnly)] and MSRC000_00E8 [Read-Only Actual Performance Frequency Clock Count (APerfReadOnly)].</value>
  </data>
  <data name="EIST" xml:space="preserve">
    <value>Enhanced Intel SpeedStep(R) Technology</value>
  </data>
  <data name="ENQCMD" xml:space="preserve">
    <value>Enqueue Stores</value>
  </data>
  <data name="ERMS" xml:space="preserve">
    <value>Enhanced REP MOVSB/STOSB</value>
  </data>
  <data name="EXTAPICSPACE" xml:space="preserve">
    <value>Extended APIC space. Presence of extended APIC register</value>
  </data>
  <data name="EXTLVTAVICACCESSCHG" xml:space="preserve">
    <value>Extended Interrupt Local Vector Table Register AVIC Access changes</value>
  </data>
  <data name="F16C" xml:space="preserve">
    <value>16-bit floating-point conversion (half precision) instructions</value>
  </data>
  <data name="FDP_EXCPTN_ONLY" xml:space="preserve">
    <value>x87 FPU Data Pointer updated only on x87 exceptions</value>
  </data>
  <data name="FETCHSAM" xml:space="preserve">
    <value>IBS fetch sampling supported</value>
  </data>
  <data name="FFXSR" xml:space="preserve">
    <value>FXSAVE and FXRSTOR instruction optimizations</value>
  </data>
  <data name="FID" xml:space="preserve">
    <value>Frequency ID control. Function replaced by HwPstate.</value>
  </data>
  <data name="FLUSHBYASID" xml:space="preserve">
    <value>TLB flush events, including CR3 writes and CR4.PGE toggles, flush only the current ASID's TLB entries. Support for the extended VMCB TLB_Control</value>
  </data>
  <data name="FMA" xml:space="preserve">
    <value>Fused Multiply Add (FMA3) 3-operand</value>
  </data>
  <data name="FMA4" xml:space="preserve">
    <value>Four-operand FMA instruction support</value>
  </data>
  <data name="FP128" xml:space="preserve">
    <value>The internal FP/SIMD execution data path is 128 bits wide.</value>
  </data>
  <data name="FP256" xml:space="preserve">
    <value>The internal FP/SIMD execution data path is 256 bits wide</value>
  </data>
  <data name="FPU" xml:space="preserve">
    <value>Floating-point Unit On-Chip</value>
  </data>
  <data name="FPU-CS DEP" xml:space="preserve">
    <value>Deprecates FPU CS and FPU DS values</value>
  </data>
  <data name="FSCMPSB" xml:space="preserve">
    <value>Fast Short CMPSB, SCASB</value>
  </data>
  <data name="FSGSBASE" xml:space="preserve">
    <value>Read/Write register FS/GS instructions</value>
  </data>
  <data name="FSRM" xml:space="preserve">
    <value>Fast short REP MOV</value>
  </data>
  <data name="FSSTOSB" xml:space="preserve">
    <value>Fast Short STOSB</value>
  </data>
  <data name="FXSR" xml:space="preserve">
    <value>FXSAVE and FXSTOR instructions</value>
  </data>
  <data name="FZMOVSB" xml:space="preserve">
    <value>Fast Zero-Length MOVSB</value>
  </data>
  <data name="GFNI" xml:space="preserve">
    <value>AVX Galois Field instructions</value>
  </data>
  <data name="GMET" xml:space="preserve">
    <value>Guest Mode Execution Trap</value>
  </data>
  <data name="HLE" xml:space="preserve">
    <value>TSX Hardware lock elision instructions</value>
  </data>
  <data name="HOST_MCE_OVERRIDE" xml:space="preserve">
    <value>When host CR4.MCE=1 and guest CR4.MCE=0, machine check exceptions (#MC) in a guest do not cause shutdown and are always intercepted</value>
  </data>
  <data name="HRESET" xml:space="preserve">
    <value>Supports IA32_HRESET_ENABLE MSR (Processor Reset History)</value>
  </data>
  <data name="HTT" xml:space="preserve">
    <value>Multi-Threading</value>
  </data>
  <data name="HWA" xml:space="preserve">
    <value>Hardware assert support. Indicates support for MSRC001_10[DF:C0]</value>
  </data>
  <data name="HWENVCACHECOH" xml:space="preserve">
    <value>Hardware cache coherency across encryption domains enforced</value>
  </data>
  <data name="HWPSTATE" xml:space="preserve">
    <value>Hardware P-state control. MSRC001_0061 [P-state Current Limit], MSRC001_0062 [P-state Control] and MSRC001_0063 [P-state Status] exist</value>
  </data>
  <data name="HYBRID" xml:space="preserve">
    <value>Processor identified as a hybrid part</value>
  </data>
  <data name="HYPERVISOR" xml:space="preserve">
    <value>CPU is running in Hypervisor mode</value>
  </data>
  <data name="IA32_ARCH_CAPABILITIES" xml:space="preserve">
    <value>Speculative Side Channel mitigates, IA32_ARCH_CAPABILITIES MSR supported, CPU specific</value>
  </data>
  <data name="IA32_CORE_CAPABILITIES" xml:space="preserve">
    <value>Support for a MSR listing model-specific core capabilities, IA32_CORE_CAPABILITIES MSR supported, CPU specific</value>
  </data>
  <data name="IA32_PPIN" xml:space="preserve">
    <value>Enumerates the presence of the IA32_PPIN and IA32_PPIN_CTL MSRs</value>
  </data>
  <data name="IA32_TSC_ADJUST" xml:space="preserve">
    <value>IA32_TSC_ADJUST MSR</value>
  </data>
  <data name="IA64" xml:space="preserve">
    <value>IA64 processor emulating in x86 mode</value>
  </data>
  <data name="IBPB" xml:space="preserve">
    <value>Indirect branch prediction barrier software control available, Spectre mitigation for branch prediction side channel timing attacks</value>
  </data>
  <data name="IBRS" xml:space="preserve">
    <value>Indirect branch restricted speculation, Spectre mitigation enabled</value>
  </data>
  <data name="IBRS_ALL" xml:space="preserve">
    <value>IBRS always on mode</value>
  </data>
  <data name="IBRS_IBPB" xml:space="preserve">
    <value>Indirect branch restricted speculation (IBRS) and indirect branch predictor barrier (IBPB)</value>
  </data>
  <data name="IBRS_PREF" xml:space="preserve">
    <value>IBRS preferred</value>
  </data>
  <data name="IBRS_SMP" xml:space="preserve">
    <value>IBRS provides Same Mode Protection speculation limits</value>
  </data>
  <data name="IBS" xml:space="preserve">
    <value>Instruction based sampling</value>
  </data>
  <data name="IBSFFV" xml:space="preserve">
    <value>IBS feature flags valid</value>
  </data>
  <data name="IBSL3MISSFILTERING" xml:space="preserve">
    <value>3 Miss Filtering for IBS supported</value>
  </data>
  <data name="IBSVIRT" xml:space="preserve">
    <value>IBS Virtualization</value>
  </data>
  <data name="IBSVIRTGUESTCTL" xml:space="preserve">
    <value>IBS Virtualization supported for SEV-ES guests</value>
  </data>
  <data name="INTEL_PT" xml:space="preserve">
    <value>Intel Processor Trace</value>
  </data>
  <data name="INT_WBINVD" xml:space="preserve">
    <value>WBINVD/WBNOINVD instructions are interruptible</value>
  </data>
  <data name="INVLPGB" xml:space="preserve">
    <value>INVLPGB and TLBSYNC instruction supported</value>
  </data>
  <data name="INVLPGB_NESTED" xml:space="preserve">
    <value>INVLPGB support for invalidating guest nested translations</value>
  </data>
  <data name="INVPCID" xml:space="preserve">
    <value>INVPCID instruction for system software that manages process-context identifiers</value>
  </data>
  <data name="IPBP_RET" xml:space="preserve">
    <value>The processor clears the return address predictor when MSR PRED_CMD.IBPB is written to 1.</value>
  </data>
  <data name="IPRED_CTRL" xml:space="preserve">
    <value>IA32_SPEC_CTRL MSR allows control of IPRED_DIS control</value>
  </data>
  <data name="IRPERF" xml:space="preserve">
    <value>Instruction Retired Counter MSR available</value>
  </data>
  <data name="KL" xml:space="preserve">
    <value>Key Locker</value>
  </data>
  <data name="L1D_FLUSH" xml:space="preserve">
    <value>IA32_FLUSH_CMD MSR supported</value>
  </data>
  <data name="L3CACHELCLBWFILLMON" xml:space="preserve">
    <value>Reads to local DRAM memory</value>
  </data>
  <data name="L3CACHELCLBWNTWRMON" xml:space="preserve">
    <value>Non-temporal writes to local memory</value>
  </data>
  <data name="L3CACHELCLSLOWBWFILLMON" xml:space="preserve">
    <value>Reads to local memory identified as “Slow Memory”</value>
  </data>
  <data name="L3CACHERMTBWFILLMON" xml:space="preserve">
    <value>Reads to remote DRAM memory.</value>
  </data>
  <data name="L3CACHERMTBWNTWRMON" xml:space="preserve">
    <value>Non-temporal writes to remote memory</value>
  </data>
  <data name="L3CACHERMTSLOWBWFILLMON" xml:space="preserve">
    <value>Reads to remote memory identified as “Slow Memory”</value>
  </data>
  <data name="L3CACHEVICMON" xml:space="preserve">
    <value>Dirty victim writes to all types of memory</value>
  </data>
  <data name="L3MBE" xml:space="preserve">
    <value>Memory Bandwidth Enforcement</value>
  </data>
  <data name="L3RR" xml:space="preserve">
    <value>L3 Range Reservations</value>
  </data>
  <data name="L3SMBE" xml:space="preserve">
    <value>Slow Memory Bandwidth Enforcement</value>
  </data>
  <data name="LA57" xml:space="preserve">
    <value>Linear Addressing 57-bit and 5-Level Paging</value>
  </data>
  <data name="LAM" xml:space="preserve">
    <value>Linear Address Masking</value>
  </data>
  <data name="LBR" xml:space="preserve">
    <value>Architectural Last Branch Records</value>
  </data>
  <data name="LBRANDPMCFREEZE" xml:space="preserve">
    <value>Freezing Core Performance Counters and LBR Stack on Core Performance Counter overflow supported</value>
  </data>
  <data name="LBRSTACK" xml:space="preserve">
    <value>Last Branch Record Stack supported</value>
  </data>
  <data name="LBRVIRT" xml:space="preserve">
    <value>LBR virtualization</value>
  </data>
  <data name="LFENCEALWAYSSERIALIZING" xml:space="preserve">
    <value>LFENCE is always dispatch serializing</value>
  </data>
  <data name="LM" xml:space="preserve">
    <value>Long Mode. Access to 64-bit instructions and registers, also known as x86_64 or x64</value>
  </data>
  <data name="LWP" xml:space="preserve">
    <value>Lightweight profiling support</value>
  </data>
  <data name="LWPAVAIL" xml:space="preserve">
    <value>The LWP feature is available</value>
  </data>
  <data name="LWPBRANCHPREDICTION" xml:space="preserve">
    <value>Branch prediction filtering supported. Branches Retired events can be filtered based on whether the branch was predicted properly</value>
  </data>
  <data name="LWPBRE" xml:space="preserve">
    <value>Branch retired event available</value>
  </data>
  <data name="LWPCACHELATENCY" xml:space="preserve">
    <value>Cache latency filtering supported. Cache-related events can be filtered by latency</value>
  </data>
  <data name="LWPCACHELEVELS" xml:space="preserve">
    <value>Cache level filtering supported. Cache-related events can be filtered by the cache level that returned the data</value>
  </data>
  <data name="LWPCNH" xml:space="preserve">
    <value>Core clocks not halted event available</value>
  </data>
  <data name="LWPCONT" xml:space="preserve">
    <value>Sampling in continuous mode is available</value>
  </data>
  <data name="LWPDME" xml:space="preserve">
    <value>DC miss event available</value>
  </data>
  <data name="LWPINT" xml:space="preserve">
    <value>Interrupt on threshold overflow available</value>
  </data>
  <data name="LWPIPFILTERING" xml:space="preserve">
    <value>IP filtering supported</value>
  </data>
  <data name="LWPIRE" xml:space="preserve">
    <value>Instructions retired event available</value>
  </data>
  <data name="LWPPTSC" xml:space="preserve">
    <value>Performance time stamp counter in event record is available</value>
  </data>
  <data name="LWPRNH" xml:space="preserve">
    <value>Core reference clocks not halted event available</value>
  </data>
  <data name="LWPVAL" xml:space="preserve">
    <value>LWPVAL instruction available</value>
  </data>
  <data name="MBE" xml:space="preserve">
    <value>Memory Bandwidth Enforcement (or sometimes BE)</value>
  </data>
  <data name="MCA" xml:space="preserve">
    <value>Machine-Check Architecture</value>
  </data>
  <data name="MCAOVERFLOWRECOV" xml:space="preserve">
    <value>MCA overflow recovery support. If set, indicates that MCA overflow conditions (MCi_STATUS[Overflow]=1) are not fatal; software may safely ignore such conditions. If clear, MCA overflow conditions require software to shut down the system.</value>
  </data>
  <data name="MCDT_NO" xml:space="preserve">
    <value>Processor does not exhibit MXCSR configuration dependent timing and no mitigation necessary</value>
  </data>
  <data name="MCE" xml:space="preserve">
    <value>Machine-Check Exception</value>
  </data>
  <data name="MCOMMIT" xml:space="preserve">
    <value>MCOMMIT instruction supported</value>
  </data>
  <data name="MD_CLEAR" xml:space="preserve">
    <value>MD_CLEAR supported</value>
  </data>
  <data name="MEMHMK" xml:space="preserve">
    <value>Secure Host Multi-Key Memory (MEM-HMK) Encryption Mode Supported</value>
  </data>
  <data name="MISALIGNSSE" xml:space="preserve">
    <value>Misaligned SSE mode</value>
  </data>
  <data name="MMX" xml:space="preserve">
    <value>MMX Technologies, Multimedia Extensions</value>
  </data>
  <data name="MMXEXT" xml:space="preserve">
    <value>AMD extensions to MMX instructions</value>
  </data>
  <data name="MONITOR" xml:space="preserve">
    <value>MONITOR and MWAIT instructions</value>
  </data>
  <data name="MONITORX" xml:space="preserve">
    <value>MONITORX instruction support</value>
  </data>
  <data name="MOVBE" xml:space="preserve">
    <value>MOVBE (big-endian) instruction</value>
  </data>
  <data name="MOVDIR64B" xml:space="preserve">
    <value>MOVDIR64B instruction</value>
  </data>
  <data name="MOVDIRI" xml:space="preserve">
    <value>MOVDIRI instruction</value>
  </data>
  <data name="MOVU" xml:space="preserve">
    <value>MOVU SSE instructions are more efficient and should be preferred to SSE MOVL/MOVH. MOVUPS is more efficient than MOVLPS/MOVHPS. MOVUPD is more efficient than MOVLPD/MOVHPD</value>
  </data>
  <data name="MP" xml:space="preserve">
    <value>Multi-Processor capable. AMD K7 processors prior to CPUID=0662h may report 0 even if they are MP-capable.</value>
  </data>
  <data name="MPX" xml:space="preserve">
    <value>Intel(R) Memory Protection Extensions</value>
  </data>
  <data name="MSR" xml:space="preserve">
    <value>Model Specific Registers</value>
  </data>
  <data name="MTRR" xml:space="preserve">
    <value>Memory Type Range Registers</value>
  </data>
  <data name="NESTEDVIRTSNPMSR" xml:space="preserve">
    <value>VIRT_RMPUPDATE MSR (C001_F001h) and VIRT_PSMASH MSR (C001_F002h) supported</value>
  </data>
  <data name="NESTEDVIRTVMCBADDRCHK" xml:space="preserve">
    <value>Guest VMCB address check</value>
  </data>
  <data name="NODEID" xml:space="preserve">
    <value>Node ID: MSR C001_100Ch</value>
  </data>
  <data name="NONESTEDDATABP" xml:space="preserve">
    <value>Processor ignores nested data breakpoints</value>
  </data>
  <data name="NOSMMCTLMSR" xml:space="preserve">
    <value>SMM_CTL MSR (C001_0116h) is not supported</value>
  </data>
  <data name="NP" xml:space="preserve">
    <value>Nested Paging</value>
  </data>
  <data name="NRIPS" xml:space="preserve">
    <value>Support for NRIP save on #VMEXIT</value>
  </data>
  <data name="NULLSELECTCLEARSBASE" xml:space="preserve">
    <value>Null segment selector loads also clear the destination segment register base and limit</value>
  </data>
  <data name="OPBRNFUSE" xml:space="preserve">
    <value>Fused branch micro-op indication supported</value>
  </data>
  <data name="OPCNT" xml:space="preserve">
    <value>Op counting mode supported</value>
  </data>
  <data name="OPCNTEXT" xml:space="preserve">
    <value>IbsOpCurCnt and IbsOpMaxCnt extend by 7 bits</value>
  </data>
  <data name="OPSAM" xml:space="preserve">
    <value>IBS execution sampling supported</value>
  </data>
  <data name="OSPKE" xml:space="preserve">
    <value>OS has set CR4.PKE to enable protection keys (and the RDPKRU/WRPKRU instructions)</value>
  </data>
  <data name="OSVW" xml:space="preserve">
    <value>OS visible workaround. Indicates OS-visible workaround support for the Operating System</value>
  </data>
  <data name="OSXSAVE" xml:space="preserve">
    <value>OS-Enabled Extended State Management</value>
  </data>
  <data name="PAE" xml:space="preserve">
    <value>Physical Address Extension</value>
  </data>
  <data name="PAGEFLUSHMSR" xml:space="preserve">
    <value>Page Flush MSR available</value>
  </data>
  <data name="PAT" xml:space="preserve">
    <value>Page Attribute Table</value>
  </data>
  <data name="PAUSEFILTER" xml:space="preserve">
    <value>Pause intercept filter</value>
  </data>
  <data name="PAUSEFILTERTHRESHOLD" xml:space="preserve">
    <value>Support for the PAUSE filter cycle count threshold</value>
  </data>
  <data name="PBE" xml:space="preserve">
    <value>Pending Break Enable</value>
  </data>
  <data name="PCID" xml:space="preserve">
    <value>Process Context Identifiers</value>
  </data>
  <data name="PCLMULQDQ" xml:space="preserve">
    <value>PCLMULQDQ Instruction</value>
  </data>
  <data name="PCOMMIT" xml:space="preserve">
    <value>Persistent Memory PCOMMIT instruction (deprecated, hardware manufacturers support ADR - Asynchronous DRAM refresh)</value>
  </data>
  <data name="PCONFIG" xml:space="preserve">
    <value>Platform configuration (Memory Encryption Technologies instructions)</value>
  </data>
  <data name="PDCM" xml:space="preserve">
    <value>Perfmon and Debug Capability</value>
  </data>
  <data name="PERFCTREXTCORE" xml:space="preserve">
    <value>Processor performance counter extensions support. Indicates support for MSRC001_020[A,8,6,4,2,0] and MSRC001_020[B,9,7,5,3,1]</value>
  </data>
  <data name="PERFCTREXTNB" xml:space="preserve">
    <value>NB performance counter extensions support. Indicates support for MSRC001_024[6,4,2,0] and MSRC001_024[7,5,3,1]</value>
  </data>
  <data name="PERFL2I" xml:space="preserve">
    <value>L2I perf counter extensions (MSRs C001_023[0...7]h) (Fam 15h/16h). L3 perf counter extensions (MSRs C001_023[0...B]h) (Fam 17h)</value>
  </data>
  <data name="PERFMONV2" xml:space="preserve">
    <value>Performance Monitoring Version 2 supported</value>
  </data>
  <data name="PERFTSC" xml:space="preserve">
    <value>Performance time-stamp counter</value>
  </data>
  <data name="PGE" xml:space="preserve">
    <value>Page Global Enable bit in CR4</value>
  </data>
  <data name="PKS" xml:space="preserve">
    <value>Protection keys for supervisor-mode pages</value>
  </data>
  <data name="PKU" xml:space="preserve">
    <value>Protection Keys for user-mode pages</value>
  </data>
  <data name="POPCNT" xml:space="preserve">
    <value>POPCNT, population count, instruction</value>
  </data>
  <data name="PPIN" xml:space="preserve">
    <value>Protected Processor Inventory Number. can be enabled for privileged system inventory agent to Read PPIN</value>
  </data>
  <data name="PQE" xml:space="preserve">
    <value>Cache Allocation Strategy</value>
  </data>
  <data name="PQM" xml:space="preserve">
    <value>Platform QoS Monitoring</value>
  </data>
  <data name="PREFETCHCTLMSR" xml:space="preserve">
    <value>Prefetch control MSR supported</value>
  </data>
  <data name="PREFETCHW" xml:space="preserve">
    <value>Prefetch data into caches in anticipation of a write</value>
  </data>
  <data name="PREFETCHWT1" xml:space="preserve">
    <value>Prefetch data into caches in anticipation of a write, with T1 hint. Intel(R) Xeon Phi(TM) only</value>
  </data>
  <data name="PREVENTHOSTIBS" xml:space="preserve">
    <value>Disallowing IBS use by the host supported</value>
  </data>
  <data name="PROCFEEDBACKINTERFACE" xml:space="preserve">
    <value>Processor feedback interface.</value>
  </data>
  <data name="PROCPOWERREPORTING" xml:space="preserve">
    <value>Processor power reporting interface supported</value>
  </data>
  <data name="PSE" xml:space="preserve">
    <value>Page Size Extension</value>
  </data>
  <data name="PSE-36" xml:space="preserve">
    <value>36-bit Page Size Extension</value>
  </data>
  <data name="PSFD" xml:space="preserve">
    <value>IA32_SPEC_CTRL MSR allows disable of Fast Store Forwarding Predictor without disabling Speculative Store Bypass</value>
  </data>
  <data name="PSN" xml:space="preserve">
    <value>Processor Serial Number is present and enabled</value>
  </data>
  <data name="RDPID" xml:space="preserve">
    <value>Read Processor ID and IA32_TSX_AUX</value>
  </data>
  <data name="RDPRU" xml:space="preserve">
    <value>RDPRU instruction supported</value>
  </data>
  <data name="RDRAND" xml:space="preserve">
    <value>On-chip random number generator, RDRAND instruction</value>
  </data>
  <data name="RDSEED" xml:space="preserve">
    <value>RDSEED (read random seed) instruction</value>
  </data>
  <data name="RDT-A" xml:space="preserve">
    <value>Intel Resource Director Technology - Allocation Capability</value>
  </data>
  <data name="RDT-M" xml:space="preserve">
    <value>Intel Resource Director Technology - Monitoring Capability</value>
  </data>
  <data name="RDTSCP" xml:space="preserve">
    <value>RDTSCP and IA32_TSX_AUX supported</value>
  </data>
  <data name="RDWROPCNT" xml:space="preserve">
    <value>Read write of op counter supported</value>
  </data>
  <data name="RESTRICTEDINJECTION" xml:space="preserve">
    <value>Restricted Injection supported</value>
  </data>
  <data name="RIPINVALIDCHK" xml:space="preserve">
    <value>Invalid RIP indication supported</value>
  </data>
  <data name="RMPQUERY" xml:space="preserve">
    <value>RMPQUERY Instruction supported</value>
  </data>
  <data name="ROGPT" xml:space="preserve">
    <value>Read-Only Guest Page Table feature support</value>
  </data>
  <data name="RRSBA_CTRL" xml:space="preserve">
    <value>IA32_SPEC_CTRL MSR allows disable of RRSBA behaviour</value>
  </data>
  <data name="RTM" xml:space="preserve">
    <value>TSX restricted transactional memory</value>
  </data>
  <data name="RTM_ALWAYS_ABORT" xml:space="preserve">
    <value>If set, any execution of XBEGIN immediately aborts and transitions to the
specified fallback address.</value>
  </data>
  <data name="RTM_FORCE_ABORT" xml:space="preserve">
    <value>RTM_FORCE_ABORT supported. Processors that set this bit support the
IA32_TSX_FORCE_ABORT MSR. They allow software to set IA32_TSX_FORCE_ABORT[0]
(RTM_FORCE_ABORT)</value>
  </data>
  <data name="SCALABLEMCA" xml:space="preserve">
    <value>MCA Extension (MCAX) support</value>
  </data>
  <data name="SDBG" xml:space="preserve">
    <value>Silicon Debug (IA32_DEBUG_INTERFACE MSR)</value>
  </data>
  <data name="SDCIAE" xml:space="preserve">
    <value>Smart Data Cache Injection (SDCI) Allocation Enforcement</value>
  </data>
  <data name="SECURETSC" xml:space="preserve">
    <value>Secure TSC supported</value>
  </data>
  <data name="SEP" xml:space="preserve">
    <value>Fast System Call, SYSENTER and SYSEXIT instructions</value>
  </data>
  <data name="SERIALIZE" xml:space="preserve">
    <value>Serialize instruction execution</value>
  </data>
  <data name="SEV" xml:space="preserve">
    <value>Secure Encrypted Virtualization supported</value>
  </data>
  <data name="SEV-64" xml:space="preserve">
    <value>SEV guest execution only allowed from a 64-bit host</value>
  </data>
  <data name="SEV-ES" xml:space="preserve">
    <value>SEV (Secure Encrypted Virtualization) Encrypted State supported</value>
  </data>
  <data name="SEV-SNP" xml:space="preserve">
    <value>SEV (Secure Encrypted Virtualization) Secure Nested Paging supported</value>
  </data>
  <data name="SGX" xml:space="preserve">
    <value>Intel(R) Software Guard Extensions</value>
  </data>
  <data name="SGX-KEYS" xml:space="preserve">
    <value>Attestation Services for Intel SGX is supported</value>
  </data>
  <data name="SGX_LC" xml:space="preserve">
    <value>SGX Launch Configuration</value>
  </data>
  <data name="SHA" xml:space="preserve">
    <value>Intel(R) Secure Hash Algorithm Extensions</value>
  </data>
  <data name="SKINIT" xml:space="preserve">
    <value>SKINIT and STGI are supported, independent of the value of MSRC000_0080[SVME]</value>
  </data>
  <data name="SMAP" xml:space="preserve">
    <value>Supervisor Mode Access Prevention</value>
  </data>
  <data name="SME" xml:space="preserve">
    <value>Secure Memory Encryption supported</value>
  </data>
  <data name="SMEP" xml:space="preserve">
    <value>Supervisor Mode Execution Prevention</value>
  </data>
  <data name="SMMPGCFGLOCK" xml:space="preserve">
    <value>SMM paging configuration lock supported</value>
  </data>
  <data name="SMTPROTECTION" xml:space="preserve">
    <value>SMT Protection supported</value>
  </data>
  <data name="SMX" xml:space="preserve">
    <value>Safer Mode Extensions</value>
  </data>
  <data name="SPECCTRL" xml:space="preserve">
    <value>SPEC_CTRL virtualization</value>
  </data>
  <data name="SRBDS_CTRL" xml:space="preserve">
    <value>Special register buffer data sampling mitigations. Enumerates support for the IA32_MCU_OPT_CTRL MSR and indicates its bit 0
(RNGDS_MITG_DIS) is also supported</value>
  </data>
  <data name="SS" xml:space="preserve">
    <value>CPU Cache implements Self Snoop</value>
  </data>
  <data name="SSBD" xml:space="preserve">
    <value>Speculative Store Bypass Disable (SSBD)</value>
  </data>
  <data name="SSBD_NOTREQUIRED" xml:space="preserve">
    <value>SSBD not needed on this processor</value>
  </data>
  <data name="SSBD_VIRTSPECCTRL" xml:space="preserve">
    <value>Use VIRT_SPEC_CTRL for SSBD</value>
  </data>
  <data name="SSE" xml:space="preserve">
    <value>Streaming SIMD Extensions</value>
  </data>
  <data name="SSE2" xml:space="preserve">
    <value>Streaming SIMD Extensions 2</value>
  </data>
  <data name="SSE3" xml:space="preserve">
    <value>Streaming SIMD Extensions 3</value>
  </data>
  <data name="SSE4.1" xml:space="preserve">
    <value>Streaming SIMD Extensions 4.1</value>
  </data>
  <data name="SSE4.2" xml:space="preserve">
    <value>Streaming SIMD Extensions 4.2</value>
  </data>
  <data name="SSE4A" xml:space="preserve">
    <value>EXTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support</value>
  </data>
  <data name="SSSCHECK" xml:space="preserve">
    <value>SVM supervisor shadow stack restrictions</value>
  </data>
  <data name="SSSE3" xml:space="preserve">
    <value>Supplemental Streaming SIMD Extensions 3</value>
  </data>
  <data name="STIBP" xml:space="preserve">
    <value>Single thread indirect branch predictors (STIBP)</value>
  </data>
  <data name="STIBP_ALL" xml:space="preserve">
    <value>STIBP always on mode</value>
  </data>
  <data name="STREAMPERFMON" xml:space="preserve">
    <value>Streaming performance monitor architecture. Indicates support for
MSRC001_028[C:8,4:1]. Reserved from #24594, rev 3.21, May 2013</value>
  </data>
  <data name="SUCCOR" xml:space="preserve">
    <value>Software uncorrectable error containment and recovery capability</value>
  </data>
  <data name="SVM" xml:space="preserve">
    <value>Secure Virtual Machine</value>
  </data>
  <data name="SVML" xml:space="preserve">
    <value>SVM lock</value>
  </data>
  <data name="SVSMCOMMPAGEMSR" xml:space="preserve">
    <value>SVSM Communication Page MSR (C001_F000h) is supported</value>
  </data>
  <data name="SYSCALL" xml:space="preserve">
    <value>SYSCALL and SYSRET instructions are supported</value>
  </data>
  <data name="TBM" xml:space="preserve">
    <value>Trailing bit manipulation instruction support</value>
  </data>
  <data name="TCE" xml:space="preserve">
    <value>Translation cache extension, EFER.TCE</value>
  </data>
  <data name="TLBICTL" xml:space="preserve">
    <value>INVLPGB/TLBSYNC hypervisor enable in VMCB and TLBSYNC intercept support</value>
  </data>
  <data name="TM" xml:space="preserve">
    <value>Thermal Monitor</value>
  </data>
  <data name="TM2" xml:space="preserve">
    <value>Thermal Monitor 2</value>
  </data>
  <data name="TME_EN" xml:space="preserve">
    <value>IA32_TME MSR capabilities are supported</value>
  </data>
  <data name="TOPX" xml:space="preserve">
    <value>Topology extensions support</value>
  </data>
  <data name="TS" xml:space="preserve">
    <value>AMD Temperature sensor</value>
  </data>
  <data name="TSC" xml:space="preserve">
    <value>Time Stamp Counter</value>
  </data>
  <data name="TSC-DEADLINE" xml:space="preserve">
    <value>Time Stamp Counter Deadline supported by APIC</value>
  </data>
  <data name="TSCAUXVIRTUALIZATION" xml:space="preserve">
    <value>TSC AUX Virtualisation supported</value>
  </data>
  <data name="TSCINVARIANT" xml:space="preserve">
    <value>TSC invariant. The TSC rate is ensured to be invariant across all P-States, C-States, and stop grant transitions (such as STPCLK Throttling); therefore the TSC is suitable for use as a source of time.</value>
  </data>
  <data name="TSCRATEMSR" xml:space="preserve">
    <value>MSR based TSC rate control. Indicates support for MSR TSC ratio MSRC000_0104</value>
  </data>
  <data name="TSXLDTRK" xml:space="preserve">
    <value>TSX suspend load address tracking</value>
  </data>
  <data name="TTP" xml:space="preserve">
    <value>Thermal Trip</value>
  </data>
  <data name="UINTR" xml:space="preserve">
    <value>User Space Interrupts</value>
  </data>
  <data name="UMIP" xml:space="preserve">
    <value>User-mode Instruction Prevention</value>
  </data>
  <data name="UPPERADDRESSIGNORE" xml:space="preserve">
    <value>Upper Address Ignore is supported</value>
  </data>
  <data name="VAES" xml:space="preserve">
    <value>Vectored AES 128-bit on vectored data 256bit registers</value>
  </data>
  <data name="VGIF" xml:space="preserve">
    <value>Virtualize the Global Interrupt Flag</value>
  </data>
  <data name="VID" xml:space="preserve">
    <value>Voltage ID control. Function replaced by HwPstate.</value>
  </data>
  <data name="VIRTUALTOMMSR" xml:space="preserve">
    <value>Virtual TOM MSR supported</value>
  </data>
  <data name="VMCBCLEAN" xml:space="preserve">
    <value>Indicates support for VMCB clean bits</value>
  </data>
  <data name="VME" xml:space="preserve">
    <value>Virtual 8086 Mode Extensions</value>
  </data>
  <data name="VMGEXITPARAMETER" xml:space="preserve">
    <value>VMGEXIT Parameter supported</value>
  </data>
  <data name="VMPL" xml:space="preserve">
    <value>VM Permission Levels supported</value>
  </data>
  <data name="VMPLSSS" xml:space="preserve">
    <value>VMPL Supervisor Shadow Stack supported</value>
  </data>
  <data name="VMSAREGPROT" xml:space="preserve">
    <value>VMSA Register Protection supported</value>
  </data>
  <data name="VMSAVEVIRT" xml:space="preserve">
    <value>VMSAVE and VMLOAD virtualization (nested virtualization)</value>
  </data>
  <data name="VMX" xml:space="preserve">
    <value>Virtual Machine Extensions</value>
  </data>
  <data name="VNMI" xml:space="preserve">
    <value>NMI Virtualization</value>
  </data>
  <data name="VPCLMULQDQ" xml:space="preserve">
    <value>Vectored VPCLMULQDQ Instruction</value>
  </data>
  <data name="VTE" xml:space="preserve">
    <value>Virtual Transparent Encryption for SEV. The Virtual Transparent Encryption feature can be enabled to force all memory accesses within an SEV guest to be encrypted with the guest's key</value>
  </data>
  <data name="WAITPKG" xml:space="preserve">
    <value>User level monitor/wait (TPAUSE, UMONITOR, UMWAIT) instructions</value>
  </data>
  <data name="WBNOINVD" xml:space="preserve">
    <value>WBNOINVD instruction supported</value>
  </data>
  <data name="WDT" xml:space="preserve">
    <value>Watchdog timer support. See APM2 and APM3. Indicates support for
MSRC001_0074</value>
  </data>
  <data name="X2APIC" xml:space="preserve">
    <value>Extended APIC support</value>
  </data>
  <data name="X2AVIC" xml:space="preserve">
    <value>AMD advanced virtual interrupt controller for x2APIC mode</value>
  </data>
  <data name="XD" xml:space="preserve">
    <value>Execution Disable bit</value>
  </data>
  <data name="XFD" xml:space="preserve">
    <value>Supports extended feature disable (XFD)</value>
  </data>
  <data name="XGETBV" xml:space="preserve">
    <value>XGETBV with ECX = 1 supported</value>
  </data>
  <data name="XOP" xml:space="preserve">
    <value>Extended operation support</value>
  </data>
  <data name="XSAVE" xml:space="preserve">
    <value>XSAVE/XSTOR states</value>
  </data>
  <data name="XSAVEC" xml:space="preserve">
    <value>XSAVEC and compact XRSTOR supported</value>
  </data>
  <data name="XSAVEOPT" xml:space="preserve">
    <value>XSAVEOPT is available</value>
  </data>
  <data name="XSAVES" xml:space="preserve">
    <value>XSAVES, XRSTOR, and XSS are supported</value>
  </data>
  <data name="XTPR" xml:space="preserve">
    <value>xTPR Update Control, disable sending task priority messages</value>
  </data>
</root>